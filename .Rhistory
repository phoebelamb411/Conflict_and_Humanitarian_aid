# 2) files expected in project root
path_funding <- "ocha_funding.csv"
paths_xlsx <- c(
"Africa_aggregated_data_up_to-2025-08-30.xlsx",
"Middle-East_aggregated_data_up_to-2025-08-30.xlsx",
"Europe-Central-Asia_aggregated_data_up_to-2025-08-23.xlsx"
)
stopifnot(file.exists(path_funding))
# 3) “who’s in which bucket” and a very plain name normalizer
prominent  <- c("Ukraine","Russia","Israel","West Bank & Gaza","Sudan","Syria")
underrated <- c("Ethiopia","Somalia","Democratic Republic of the Congo","Mali","Cameroon")
normalize_country <- function(x){
x <- stringr::str_trim(x)
x <- stringr::str_replace_all(x, "\\s+", " ")
dplyr::case_when(
x %in% c("Ukraine","Ukraine (Govt)") ~ "Ukraine",
x %in% c("Russia","Russian Federation") ~ "Russia",
x %in% c("Israel","State of Israel") ~ "Israel",
x %in% c("Palestine","Palestine, State of","State of Palestine","Palestinian Territory",
"West Bank and Gaza","West Bank & Gaza","Gaza Strip","occupied Palestinian territory",
"OPT","oPt","oPt (occupied Palestinian territory)") ~ "West Bank & Gaza",
x %in% c("Sudan","Republic of the Sudan") ~ "Sudan",
x %in% c("Syria","Syrian Arab Republic") ~ "Syria",
x %in% c("Ethiopia","Federal Democratic Republic of Ethiopia") ~ "Ethiopia",
x %in% c("Somalia","Federal Republic of Somalia") ~ "Somalia",
x %in% c("Congo, Dem. Rep.","DR Congo","DRC","Congo (DRC)",
"Democratic Republic of the Congo","The Democratic Republic of the Congo") ~
"Democratic Republic of the Congo",
x %in% c("Mali","Republic of Mali") ~ "Mali",
x %in% c("Cameroon","Republic of Cameroon") ~ "Cameroon",
TRUE ~ x
)
}
pick_year <- function(y, prefer = 2024){
yy <- suppressWarnings(as.integer(y)); yy <- yy[!is.na(yy)]
if (!length(yy)) stop("No valid years found.")
if (prefer %in% yy) prefer else max(yy)
}
# 4) deaths from regional weekly Excel (ACLED-style) → country-year totals
read_agg <- function(path){
if (!file.exists(path)) return(tibble())
df <- suppressMessages(readxl::read_excel(path)) |> janitor::clean_names()
if (!("country" %in% names(df)) || !("fatalities" %in% names(df))) {
message("Skipping ", path, " — missing 'country' or 'fatalities'.")
return(tibble())
}
if (!("year" %in% names(df))) {
if ("week" %in% names(df)) {
df <- df |> mutate(week_chr = as.character(week),
year = suppressWarnings(as.integer(substr(week_chr, 1, 4))))
} else {
message("Skipping ", path, " — no 'year' or 'week'.")
return(tibble())
}
}
df |>
transmute(
country = normalize_country(as.character(country)),
year    = suppressWarnings(as.integer(year)),
deaths  = suppressWarnings(as.numeric(fatalities))
) |>
filter(!is.na(country), !is.na(year), !is.na(deaths))
}
deaths_all <- purrr::map_dfr(paths_xlsx, read_agg)
stopifnot(nrow(deaths_all) > 0)
year_deaths <- pick_year(deaths_all$year, 2024)
deaths <- deaths_all |>
filter(year == year_deaths) |>
group_by(country) |>
summarise(deaths = sum(deaths, na.rm = TRUE), .groups = "drop")
# 5) OCHA FTS plan funding → country totals, with country scraped from plan titles
fund_raw <- readr::read_csv(path_funding, show_col_types = FALSE) |> janitor::clean_names()
stopifnot(all(c("name","year","funding") %in% names(fund_raw)))
country_from_plan <- function(x){
x <- stringr::str_squish(x)
x <- stringr::str_replace_all(x, "\\([^\\)]*\\)", "")
x <- stringr::str_remove(x, "\\bHumanitarian Needs and Response Plan\\b.*$")
x <- stringr::str_remove(x, "\\bHumanitarian Response Plan\\b.*$")
x <- stringr::str_remove(x, "\\bRegional Refugee and Resilience Plan\\b.*$")
x <- stringr::str_remove(x, "\\bRegional Refugee Response Plan\\b.*$")
x <- stringr::str_remove(x, "\\bSituation Regional Refugee Response Plan\\b.*$")
x <- stringr::str_remove(x, "\\bFlash Appeal\\b.*$")
x <- stringr::str_remove(x, "\\bJoint Response Plan\\b.*$")
x <- stringr::str_remove(x, "\\bResponse Plan\\b.*$")
x <- stringr::str_remove(x, "\\bPlan de Réponse Humanitaire\\b.*$")
x <- stringr::str_remove(x, "\\bBesoins Humanitaires et Plan de Réponse\\b.*$")
x <- stringr::str_remove(x, "\\bPlan de Réponse\\b.*$")
x <- stringr::str_remove(x, "\\b\\d{4}(\\s*-\\s*\\d{4})?$")
x <- stringr::str_squish(x)
dplyr::recode(x,
"République Démocratique du Congo" = "Democratic Republic of the Congo",
"République Centrafricaine"        = "Central African Republic",
"Haïti"                            = "Haiti",
"Tchad"                            = "Chad",
.default = x
)
}
year_fund <- pick_year(fund_raw$year, 2024)
fund <- fund_raw |>
mutate(
country_clean = country_from_plan(name),
country       = normalize_country(country_clean),
funding_chr   = as.character(funding),
# one row in my export had '#value+funding+total+usd' — just drop it
funding_chr   = ifelse(grepl("^#value", funding_chr, ignore.case = TRUE), NA, funding_chr),
funding_num   = suppressWarnings(readr::parse_number(funding_chr))
) |>
filter(year == year_fund, !is.na(country)) |>
group_by(country) |>
summarise(usd = sum(funding_num, na.rm = TRUE), .groups = "drop") |>
mutate(usd = ifelse(is.finite(usd) & usd > 0, usd, NA_real_))
# 6) join + build the two tables I actually plot
base <- deaths |>
full_join(fund, by = "country") |>
mutate(deaths = tidyr::replace_na(deaths, 0))
# exact orders to match my original PNGs (top → bottom)
prominent_order  <- c("Syria","Sudan","Israel","West Bank & Gaza","Russia","Ukraine")
underrated_order <- c("Democratic Republic of the Congo","Mali","Ethiopia","Somalia","Cameroon")
tbl_prominent <- base |>
filter(country %in% prominent_order) |>
mutate(country = factor(country, levels = rev(prominent_order)))  # rev() = first appears on TOP
tbl_underrated <- base |>
filter(country %in% underrated_order) |>
mutate(country = factor(country, levels = rev(underrated_order)))
stopifnot(nrow(tbl_prominent) == 6, nrow(tbl_underrated) == 5)
# 7) plotting helpers (this is where I fussed the most)
# short pretty labels so axes don’t wrap weird
pretty_label <- function(x){
x <- as.character(x)
x <- dplyr::recode(x,
"West Bank & Gaza" = "W.B. & Gaza",
.default = x
)
x
}
# for the underrated chart I wanted the longer “explanatory” labels like in my screenshot
pretty_label_underrated <- function(x){
dplyr::recode(as.character(x),
"Democratic Republic of the Congo" = "DRC (beyond M23)",
"Mali"      = "Mali (insurgency)",
"Ethiopia"  = "Ethiopia (post-Tigray & regional)",
"Somalia"   = "Somalia (Al-Shabab insurgency)",
"Cameroon"  = "Cameroon / Lake Chad belt",
.default = x
)
}
muted_red <- "#d95f5f"  # only for PROMINENT
bar_w     <- 0.5
theme_clean <- function(){
theme_minimal(base_family = "Helvetica", base_size = 12) +
theme(
panel.grid.major.y = element_blank(),
plot.title = element_text(face = "bold", size = 14, margin = margin(b = 6)),
plot.title.position = "plot",
axis.title = element_text(size = 11),
axis.text.y = element_text(margin = margin(r = 6)),
plot.caption = element_text(size = 9, colour = "grey40"),
plot.margin = margin(t = 10, r = 24, b = 10, l = 14)
)
}
# deaths chart (I keep the year in the BIG title; small title is just “Deaths”)
plot_deaths <- function(df, bar_col){
df |>
mutate(country_lab = pretty_label(as.character(country))) |>
ggplot(aes(x = deaths, y = country_lab)) +
geom_col(width = bar_w, fill = bar_col) +
scale_x_continuous(labels = label_number(accuracy = 1, scale_cut = cut_short_scale())) +
labs(title = "Deaths", x = NULL, y = NULL) +
coord_cartesian(clip = "off") +
theme_clean()
}
# aid chart with “N/A” drawn when usd is missing (this was the little thing I wanted!)
plot_aid <- function(df, bar_col){
df2 <- df |>
mutate(
country_lab = pretty_label(as.character(country)),
usd_plot    = tidyr::replace_na(usd, 0),  # draw a 0 bar if NA
show_na     = is.na(usd)                  # but annotate as N/A
)
ggplot(df2, aes(x = usd_plot, y = country_lab)) +
geom_col(width = bar_w, fill = bar_col) +
geom_text(
data  = dplyr::filter(df2, show_na),
aes(x = 0, y = country_lab, label = "N/A"),
hjust = -0.15, vjust = 0.5, size = 3.4, colour = "grey40"
) +
scale_x_continuous(
labels = label_dollar(scale = 1e-9, suffix = "B", accuracy = 0.1),
expand = c(0.04, 0)   # a smidge of left padding so “N/A” never clips
) +
labs(title = "Humanitarian aid (USD)", x = NULL, y = NULL) +
coord_cartesian(clip = "off") +
theme_clean()
}
# same plots for UNDERRATED, but:
#   - gray bars
#   - long labels (the parenthetical descriptions)
plot_deaths_und <- function(df){
df |>
mutate(country_lab = pretty_label_underrated(country)) |>
ggplot(aes(x = deaths, y = country_lab)) +
geom_col(width = bar_w, fill = "grey40") +
scale_x_continuous(labels = label_number(accuracy = 1, scale_cut = cut_short_scale())) +
labs(title = "Conflict deaths", x = NULL, y = NULL) +
coord_cartesian(clip = "off") +
theme_clean()
}
plot_aid_und <- function(df){
df2 <- df |>
mutate(
country_lab = pretty_label_underrated(country),
usd_plot    = tidyr::replace_na(usd, 0),
show_na     = is.na(usd)
)
ggplot(df2, aes(x = usd_plot, y = country_lab)) +
geom_col(width = bar_w, fill = "grey40") +
geom_text(
data = filter(df2, show_na),
aes(x = 0, y = country_lab, label = "N/A"),
hjust = -0.15, vjust = 0.5, size = 3.4, colour = "grey40"
) +
scale_x_continuous(labels = label_dollar(scale = 1e-9, suffix = "B", accuracy = 0.1),
expand = c(0.04, 0)) +
labs(title = "Humanitarian aid (USD)", x = NULL, y = NULL) +
coord_cartesian(clip = "off") +
theme_clean()
}
caption_txt <- paste0(
"Sources: UCDP/ACLED-style regional aggregates (fatalities by country-year); ",
"OCHA FTS (country plans). Years — deaths: ", year_deaths, "; funding: ", year_fund,
". Note: 'N/A' shown where plan-level funding wasn’t reported."
)
# 8) make + save the two figures (prominent = muted red; underrated = gray)
p1 <- plot_deaths(tbl_prominent, bar_col = muted_red) +
plot_aid   (tbl_prominent, bar_col = muted_red) +
patchwork::plot_annotation(
title   = paste0("Prominent Conflicts: Impact vs Humanitarian Funding (", year_deaths, "/", year_fund, ")"),
caption = caption_txt,
theme   = theme_clean()
)
ggsave("prominent_conflicts.png", p1, width = 12, height = 8, dpi = 300)
p2 <- plot_deaths_und(tbl_underrated) +
plot_aid_und  (tbl_underrated) +
patchwork::plot_annotation(
title    = paste0("Underrated Conflicts: Deaths vs Humanitarian Aid (", year_deaths, "/", year_fund, ")"),
subtitle = "Ethiopia, Cameroon, Somalia, DRC, Mali",
caption  = caption_txt,
theme    = theme_clean()
)
getwd()
# ------------------------------------------------------------
# Conflict & Humanitarian Aid Analysis (2024)
# Author: Phoebe Lamb  |  MSBA @ Georgetown
# Repo: https://github.com/phoebelamb411/Conflict_and_Humanitarian_aid
# Notes: I rebuilt what I had last week. Lots of trial & error kept in.
# Outputs: prominent_conflicts.png, underrated_conflicts.png, session_info.txt
# ------------------------------------------------------------
# 1) libraries (I just load the usual tidy stack + patchwork)
required <- c("tidyverse","readxl","janitor","scales","patchwork")
new <- setdiff(required, rownames(installed.packages()))
if (length(new)) install.packages(new)
invisible(lapply(required, library, character.only = TRUE))
# 2) files expected in project root
path_funding <- "ocha_funding.csv"
paths_xlsx <- c(
"Africa_aggregated_data_up_to-2025-08-30.xlsx",
"Middle-East_aggregated_data_up_to-2025-08-30.xlsx",
"Europe-Central-Asia_aggregated_data_up_to-2025-08-23.xlsx"
)
stopifnot(file.exists(path_funding))
# 3) “who’s in which bucket” and a very plain name normalizer
prominent  <- c("Ukraine","Russia","Israel","West Bank & Gaza","Sudan","Syria")
underrated <- c("Ethiopia","Somalia","Democratic Republic of the Congo","Mali","Cameroon")
normalize_country <- function(x){
x <- stringr::str_trim(x)
x <- stringr::str_replace_all(x, "\\s+", " ")
dplyr::case_when(
x %in% c("Ukraine","Ukraine (Govt)") ~ "Ukraine",
x %in% c("Russia","Russian Federation") ~ "Russia",
x %in% c("Israel","State of Israel") ~ "Israel",
x %in% c("Palestine","Palestine, State of","State of Palestine","Palestinian Territory",
"West Bank and Gaza","West Bank & Gaza","Gaza Strip","occupied Palestinian territory",
"OPT","oPt","oPt (occupied Palestinian territory)") ~ "West Bank & Gaza",
x %in% c("Sudan","Republic of the Sudan") ~ "Sudan",
x %in% c("Syria","Syrian Arab Republic") ~ "Syria",
x %in% c("Ethiopia","Federal Democratic Republic of Ethiopia") ~ "Ethiopia",
x %in% c("Somalia","Federal Republic of Somalia") ~ "Somalia",
x %in% c("Congo, Dem. Rep.","DR Congo","DRC","Congo (DRC)",
"Democratic Republic of the Congo","The Democratic Republic of the Congo") ~
"Democratic Republic of the Congo",
x %in% c("Mali","Republic of Mali") ~ "Mali",
x %in% c("Cameroon","Republic of Cameroon") ~ "Cameroon",
TRUE ~ x
)
}
pick_year <- function(y, prefer = 2024){
yy <- suppressWarnings(as.integer(y)); yy <- yy[!is.na(yy)]
if (!length(yy)) stop("No valid years found.")
if (prefer %in% yy) prefer else max(yy)
}
# 4) deaths from regional weekly Excel (ACLED-style) → country-year totals
read_agg <- function(path){
if (!file.exists(path)) return(tibble())
df <- suppressMessages(readxl::read_excel(path)) |> janitor::clean_names()
if (!("country" %in% names(df)) || !("fatalities" %in% names(df))) {
message("Skipping ", path, " — missing 'country' or 'fatalities'.")
return(tibble())
}
if (!("year" %in% names(df))) {
if ("week" %in% names(df)) {
df <- df |> mutate(week_chr = as.character(week),
year = suppressWarnings(as.integer(substr(week_chr, 1, 4))))
} else {
message("Skipping ", path, " — no 'year' or 'week'.")
return(tibble())
}
}
df |>
transmute(
country = normalize_country(as.character(country)),
year    = suppressWarnings(as.integer(year)),
deaths  = suppressWarnings(as.numeric(fatalities))
) |>
filter(!is.na(country), !is.na(year), !is.na(deaths))
}
deaths_all <- purrr::map_dfr(paths_xlsx, read_agg)
stopifnot(nrow(deaths_all) > 0)
year_deaths <- pick_year(deaths_all$year, 2024)
deaths <- deaths_all |>
filter(year == year_deaths) |>
group_by(country) |>
summarise(deaths = sum(deaths, na.rm = TRUE), .groups = "drop")
# 5) OCHA FTS plan funding → country totals, with country scraped from plan titles
fund_raw <- readr::read_csv(path_funding, show_col_types = FALSE) |> janitor::clean_names()
stopifnot(all(c("name","year","funding") %in% names(fund_raw)))
country_from_plan <- function(x){
x <- stringr::str_squish(x)
x <- stringr::str_replace_all(x, "\\([^\\)]*\\)", "")
x <- stringr::str_remove(x, "\\bHumanitarian Needs and Response Plan\\b.*$")
x <- stringr::str_remove(x, "\\bHumanitarian Response Plan\\b.*$")
x <- stringr::str_remove(x, "\\bRegional Refugee and Resilience Plan\\b.*$")
x <- stringr::str_remove(x, "\\bRegional Refugee Response Plan\\b.*$")
x <- stringr::str_remove(x, "\\bSituation Regional Refugee Response Plan\\b.*$")
x <- stringr::str_remove(x, "\\bFlash Appeal\\b.*$")
x <- stringr::str_remove(x, "\\bJoint Response Plan\\b.*$")
x <- stringr::str_remove(x, "\\bResponse Plan\\b.*$")
x <- stringr::str_remove(x, "\\bPlan de Réponse Humanitaire\\b.*$")
x <- stringr::str_remove(x, "\\bBesoins Humanitaires et Plan de Réponse\\b.*$")
x <- stringr::str_remove(x, "\\bPlan de Réponse\\b.*$")
x <- stringr::str_remove(x, "\\b\\d{4}(\\s*-\\s*\\d{4})?$")
x <- stringr::str_squish(x)
dplyr::recode(x,
"République Démocratique du Congo" = "Democratic Republic of the Congo",
"République Centrafricaine"        = "Central African Republic",
"Haïti"                            = "Haiti",
"Tchad"                            = "Chad",
.default = x
)
}
year_fund <- pick_year(fund_raw$year, 2024)
fund <- fund_raw |>
mutate(
country_clean = country_from_plan(name),
country       = normalize_country(country_clean),
funding_chr   = as.character(funding),
# one row in my export had '#value+funding+total+usd' — just drop it
funding_chr   = ifelse(grepl("^#value", funding_chr, ignore.case = TRUE), NA, funding_chr),
funding_num   = suppressWarnings(readr::parse_number(funding_chr))
) |>
filter(year == year_fund, !is.na(country)) |>
group_by(country) |>
summarise(usd = sum(funding_num, na.rm = TRUE), .groups = "drop") |>
mutate(usd = ifelse(is.finite(usd) & usd > 0, usd, NA_real_))
# 6) join + build the two tables I actually plot
base <- deaths |>
full_join(fund, by = "country") |>
mutate(deaths = tidyr::replace_na(deaths, 0))
# exact orders to match my original PNGs (top → bottom)
prominent_order  <- c("Syria","Sudan","Israel","West Bank & Gaza","Russia","Ukraine")
underrated_order <- c("Democratic Republic of the Congo","Mali","Ethiopia","Somalia","Cameroon")
tbl_prominent <- base |>
filter(country %in% prominent_order) |>
mutate(country = factor(country, levels = rev(prominent_order)))  # rev() = first appears on TOP
tbl_underrated <- base |>
filter(country %in% underrated_order) |>
mutate(country = factor(country, levels = rev(underrated_order)))
stopifnot(nrow(tbl_prominent) == 6, nrow(tbl_underrated) == 5)
# ===== 7) Plotting helpers (patched to avoid factor/.default error) =====
# short labels used on PROMINENT plots
pretty_label <- function(x){
x_chr <- as.character(x)
dplyr::recode(
x_chr,
"West Bank & Gaza" = "W.B. & Gaza",
.default = x_chr
)
}
# long labels used on UNDERRATED plots
pretty_label_underrated <- function(x){
x_chr <- as.character(x)
dplyr::recode(
x_chr,
"Democratic Republic of the Congo" = "DRC (beyond M23)",
"Mali"      = "Mali (insurgency)",
"Ethiopia"  = "Ethiopia (post-Tigray & regional)",
"Somalia"   = "Somalia (Al-Shabab insurgency)",
"Cameroon"  = "Cameroon / Lake Chad belt",
.default = x_chr
)
}
muted_red <- "#d95f5f"  # only for PROMINENT
bar_w     <- 0.5
theme_clean <- function(){
ggplot2::theme_minimal(base_family = "Helvetica", base_size = 12) +
ggplot2::theme(
panel.grid.major.y = element_blank(),
plot.title = element_text(face = "bold", size = 14, margin = margin(b = 6)),
plot.title.position = "plot",
axis.title = element_text(size = 11),
axis.text.y = element_text(margin = margin(r = 6)),
plot.caption = element_text(size = 9, colour = "grey40"),
plot.margin = margin(t = 10, r = 24, b = 10, l = 14)
)
}
# PROMINENT deaths (muted red)
plot_deaths <- function(df, bar_col = muted_red){
df |>
dplyr::mutate(country_lab = pretty_label(country)) |>
ggplot(aes(x = deaths, y = country_lab)) +
geom_col(width = bar_w, fill = bar_col) +
scale_x_continuous(labels = scales::label_number(accuracy = 1, scale_cut = scales::cut_short_scale())) +
labs(title = "Deaths", x = NULL, y = NULL) +
coord_cartesian(clip = "off") +
theme_clean()
}
# PROMINENT aid (muted red) + "N/A" labels
plot_aid <- function(df, bar_col = muted_red){
df2 <- df |>
dplyr::mutate(
country_lab = pretty_label(country),
usd_plot    = tidyr::replace_na(usd, 0),
show_na     = is.na(usd)
)
ggplot(df2, aes(x = usd_plot, y = country_lab)) +
geom_col(width = bar_w, fill = bar_col) +
geom_text(
data  = dplyr::filter(df2, show_na),
aes(x = 0, y = country_lab, label = "N/A"),
hjust = -0.15, vjust = 0.5, size = 3.4, colour = "grey40"
) +
scale_x_continuous(
labels = scales::label_dollar(scale = 1e-9, suffix = "B", accuracy = 0.1),
expand = c(0.04, 0)
) +
labs(title = "Humanitarian aid (USD)", x = NULL, y = NULL) +
coord_cartesian(clip = "off") +
theme_clean()
}
# UNDERRATED deaths (gray)
plot_deaths_und <- function(df){
df |>
dplyr::mutate(country_lab = pretty_label_underrated(country)) |>
ggplot(aes(x = deaths, y = country_lab)) +
geom_col(width = bar_w, fill = "grey40") +
scale_x_continuous(labels = scales::label_number(accuracy = 1, scale_cut = scales::cut_short_scale())) +
labs(title = "Conflict deaths", x = NULL, y = NULL) +
coord_cartesian(clip = "off") +
theme_clean()
}
# UNDERRATED aid (gray) + "N/A"
plot_aid_und <- function(df){
df2 <- df |>
dplyr::mutate(
country_lab = pretty_label_underrated(country),
usd_plot    = tidyr::replace_na(usd, 0),
show_na     = is.na(usd)
)
ggplot(df2, aes(x = usd_plot, y = country_lab)) +
geom_col(width = bar_w, fill = "grey40") +
geom_text(
data = dplyr::filter(df2, show_na),
aes(x = 0, y = country_lab, label = "N/A"),
hjust = -0.15, vjust = 0.5, size = 3.4, colour = "grey40"
) +
scale_x_continuous(
labels = scales::label_dollar(scale = 1e-9, suffix = "B", accuracy = 0.1),
expand = c(0.04, 0)
) +
labs(title = "Humanitarian aid (USD)", x = NULL, y = NULL) +
coord_cartesian(clip = "off") +
theme_clean()
}
# 8) make + save the two figures (prominent = muted red; underrated = gray)
p1 <- plot_deaths(tbl_prominent, bar_col = muted_red) +
plot_aid   (tbl_prominent, bar_col = muted_red) +
patchwork::plot_annotation(
title   = paste0("Prominent Conflicts: Impact vs Humanitarian Funding (", year_deaths, "/", year_fund, ")"),
caption = caption_txt,
theme   = theme_clean()
)
ggsave("prominent_conflicts.png", p1, width = 12, height = 8, dpi = 300)
p2 <- plot_deaths_und(tbl_underrated) +
plot_aid_und  (tbl_underrated) +
patchwork::plot_annotation(
title    = paste0("Underrated Conflicts: Deaths vs Humanitarian Aid (", year_deaths, "/", year_fund, ")"),
subtitle = "Ethiopia, Cameroon, Somalia, DRC, Mali",
caption  = caption_txt,
theme    = theme_clean()
)
ggsave("underrated_conflicts.png", p2, width = 12, height = 8, dpi = 300)
# 9) I always dump session info so I can say “yep, it ran on my machine”
writeLines(capture.output(sessionInfo()), "session_info.txt")
